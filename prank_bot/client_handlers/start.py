from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from client_handlers.base import *
from config import OP_USERS
from database.models import ChannelsToSub


class StartCmd(BaseHandler):
    FILTER = command("start")

    @property
    async def channels_for_sub(self) -> InlineKeyboardMarkup | None:
        sub_instances = []

        for chan in ChannelsToSub.select():
            try:
                await self.client.get_chat_member(chat_id=chan.tg_id, user_id=self.request.from_user.id)
            except:
                sub_instances.append(chan)

        if not sub_instances:
            return None

        return InlineKeyboardMarkup(inline_keyboard=[[
            InlineKeyboardButton(text=f"–ö–∞–Ω–∞–ª {sub_instances.index(c) + 1}", url=f"https://t.me/{c.tg_id.strip('@')}")
        ] for c in sub_instances])

    async def func(self):
        keyboard = await self.channels_for_sub
        if keyboard is not None and self.request.from_user.id not in OP_USERS:
            await self.request.reply(
                "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞, **–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã**:",
                reply_markup=keyboard, disable_web_page_preview=True
            )
            await self.request.reply((
                f"**–ü—Ä–∏–≤–µ—Ç, {self.request.from_user.first_name}**\n"
                "–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –≤—ã–ø–æ–ª–Ω–∏ –∑–∞–¥–∞–Ω–∏—è.\n"
                "–ü–æ—Ç–æ–º, –Ω–∞–∂–º–∏ –Ω–∞ /start –µ—â–µ —Ä–∞–∑, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é —Å—Å—ã–ª–∫—É."
            ))

            return

        await self.request.reply((
            "**–ü—Ä–∏–≤–µ—Ç**,\n"
            "üîó –í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞:\n"
            f"https://yandex-food-f2a0f4.netlify.app\n"
            "–û—Ç–ø—Ä–∞–≤–ª—è–π —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º, —á—Ç–æ–±—ã –Ω–∞–ø—É–≥–∞—Ç—å –∏—Ö."
        ))
