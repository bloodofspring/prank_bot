from colorama import Fore
from flyerapi import Flyer
from pyrogram.types import InlineKeyboardButton

from client_handlers.base import *
from config import FLYER_TOKEN
from database.models import BotUsers
from util import color_log


class GetLink(BaseHandler):
    HANDLER = CallbackQueryHandler
    FILTER = create(lambda _, __, q: q and q.data and q.data in ["prank", "check_subs"])

    @staticmethod
    def add_check_button(keyboard: list[list[InlineKeyboardButton]]):
        keyboard += [[InlineKeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="check_subs")]]
        return keyboard

    async def func(self):
        flyer = Flyer(FLYER_TOKEN)
        if not await flyer.check(self.request.from_user.id):
            print(color_log(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.request.from_user.id} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –û–ü! –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è..",
                Fore.LIGHTGREEN_EX
            ))
            db_user = self.db_user
            db_user.is_subscribed_to_op = False
            BotUsers.save(db_user)

            return

        db_user = self.db_user
        db_user.is_subscribed_to_op = True
        BotUsers.save(db_user)

        print(color_log(
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.request.from_user.id} –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –û–ü. –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é..", Fore.LIGHTGREEN_EX
        ))

        subscribed = len(BotUsers.select().where(BotUsers.is_subscribed_to_op))
        all_ = len(BotUsers.select())
        percent = '{:.2f}%'.format(round((subscribed / all_) * 100, 2))
        print(color_log(f"–ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∞ –û–ü –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {subscribed}/{all_} ({percent})", Fore.LIGHTCYAN_EX))

        await self.request.message.reply((
            "–ü—Ä–∏–≤–µ—Ç,\n"
            "üîó –í–æ—Ç —Ç–≤–æ—è —Å—Å—ã–ª–∫–∞:\n"
            "https://yandex-food-f2a0f4.netlify.app\n"
            "–û—Ç–ø—Ä–∞–≤–ª—è–π —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º, —á—Ç–æ–±—ã –Ω–∞–ø—É–≥–∞—Ç—å –∏—Ö."
        ))


class HowDItWorks(BaseHandler):
    HANDLER = CallbackQueryHandler
    FILTER = create(lambda _, __, q: q and q.data and q.data == "how_d_it_works")

    async def func(self):
        await self.request.message.reply((
            "–í—ã –ø—Ä–∏—Å—ã–ª–∞–µ—Ç–µ –¥—Ä—É–≥—É —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤–∞–º –ø—Ä–∏—Å–ª–∞–ª –±–æ—Ç.\n"
            "–î—Ä—É–≥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥¬ª, "
            "–Ω–æ –≤–º–µ—Å—Ç–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –≤–∞—à –¥—Ä—É–≥ –±—É–¥–µ—Ç —Å–ª—É—à–∞—Ç—å —Å—Ç–æ–Ω—ã –Ω–∞ –≤—Å—é –∫–æ–º–Ω–∞—Ç—É."
        ))
